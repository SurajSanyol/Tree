#include <iostream>
#include <queue>
using namespace std;

class Node {
public:
  int data;
  Node *left;
  Node *right;

  Node(int data) {
    this->data = data;
    left = NULL;
    right = NULL;
  }
};

Node *buildTree() {

  int data;
  cout << "enter the value of data : ";
  cin >> data;

  // base condition
  if (data == -1) {
    return NULL;
  }

  Node *root = new Node(data);
  cout << "enter the  left value of data : " << data << endl;
  root->left = buildTree();
  cout << "enter the  right value of data : " << data << endl;
  root->right = buildTree();

  return root;
}

/// level order traversal

void levelOrderTraversal(Node *root) {
  queue<Node *> q;
  q.push(root);

  while (!q.empty()) {
    Node *temp = q.front();
    q.pop();
    cout << temp->data << " ";

    if (temp->left) {
      q.push(temp->left);
    }
    if (temp->right) {
      q.push(temp->right);
    }
  }
}

int main() {
  // cout << "Hello world!" << endl;
  Node *root = NULL;
  root = buildTree();

  levelOrderTraversal(root);
  return 0;
}
